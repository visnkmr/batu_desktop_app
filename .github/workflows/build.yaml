name: build

on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
      - main
  pull_request:
    branches:
      - '*'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  # Documentation on environments:
  # https://docs.github.com/en/free-pro-team@latest/actions/reference/specifications-for-github-hosted-runners

  binaries:
    if: |
      github.ref == 'refs/heads/main' || github.event.pull_request.base.ref == 'main'

    permissions:
      contents: write

    strategy:
      fail-fast: false
      matrix:
        # - include
        platform: [macos-latest, ubuntu-22.04, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Install native dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install frontend dependencies
        run: bun install --frozen-lockfile

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          includeUpdaterJson: false
          # compile a universal binary for intel + apple sillicon
          args: ${{ matrix.platform == 'macos-latest' && '--target universal-apple-darwin' || '' }}

      - uses: actions/upload-artifact@v4
        if: matrix.platform == 'ubuntu-22.04'
        with:
          name: binaries-linux
          path: |
            ${{ github.workspace }}/src-tauri/target/release/bundle/**/*.deb
            ${{ github.workspace }}/src-tauri/target/release/bundle/**/*.rpm
            ${{ github.workspace }}/src-tauri/target/release/bundle/**/*.AppImage

      - uses: actions/upload-artifact@v4
        if: matrix.platform == 'macos-latest'
        with:
          name: binaries-macos
          path: |
            ${{ github.workspace }}/src-tauri/target/universal-apple-darwin/release/bundle/**/*.dmg

      - uses: actions/upload-artifact@v4
        if: matrix.platform == 'windows-latest'
        with:
          name: binaries-windows
          path: |
            ${{ github.workspace }}/src-tauri/target/release/bundle/**/*.exe